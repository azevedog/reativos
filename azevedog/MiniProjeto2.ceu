#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input int  SDL_DT;
input _SDL_KeyboardEvent&& SDL_KEYDOWN;
input _SDL_KeyboardEvent&& SDL_KEYUP;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;

var _SDL_Window&? window;
    finalize
        window = &_SDL_CreateWindow("Jogo",
                    _SDL_WINDOWPOS_UNDEFINED,
                    _SDL_WINDOWPOS_UNDEFINED,
                    640, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&window!);
    end

var _SDL_Renderer&? renderer;
    finalize
        renderer = &_SDL_CreateRenderer(&&window!, -1, 0);
    with
        _SDL_DestroyRenderer(&&renderer!);
    end

class Cloud with
    var _SDL_Renderer& ren;
    var _SDL_Rect      r;
    var int            vx;
do
    var int x = -this.r.w * 1000;

    par do
        every dt in SDL_DT do
            x = x + this.vx*dt;
            if x > 640000 then
                x = 0;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                    0xDD,0xDD,0xDD,0x00);
            this.r.x = x / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    end
end

class Player with
    var _SDL_Renderer& ren;
	var _SDL_Rect r;
	var int i=0;
do
    var int x = (640/2 - 20/2) * 1000;
    var int y = (480-50) * 1000;
    var int vx = 0;
    var int vy = 0;

    
	r.x = 0;
	r.y = 0;
	r.h = 50;
	r.w = 20;

    par do
        every dt in SDL_DT do
		if(x<=0)then if(vx<=0)then vx=0;end end
		if(x>=620000)then if(vx>=0)then vx=0;end end
		if(y<=0)then if(vy<=0)then i=i+1; _printf("Crossed:%d\n",i); y=480000; end end
		if(y>=480000)then if(vy>=0)then y=0; end end
            x = x + vx*dt;
            y = y + vy*dt;
		
        end
    with
        par do
            loop do
                var _SDL_KeyboardEvent&& key;
                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_LEFT;
                vx = -100;
                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_LEFT;
                vx = 0;
            end
        with
            loop do
                var _SDL_KeyboardEvent&& key;
                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_RIGHT;
                vx = 100;
                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_RIGHT;
                vx = 0;
            end
 	with
            loop do
                var _SDL_KeyboardEvent&& key;
                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_UP;
                vy = -100;
                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_UP;
                vy = 0;
            end
	with
            loop do
                var _SDL_KeyboardEvent&& key;
                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_DOWN;
                vy = 100;
                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_DOWN;
                vy = 0;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                    0x00,0x00,0x00,0x00);
            r.x = x / 1000;
            r.y = y / 1000;
            _SDL_RenderFillRect(&&this.ren, &&r);
        end
    end
end

_srand(_time(null));
event void e;

par/or do
    await SDL_QUIT;
with
	await e;
with
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(&&renderer!,
                                0xFF,0xFF,0xFF,0x00);
        _SDL_RenderFillRect(&&renderer!, null);
    end
with
   	pool Cloud[12] cloudPool;
    	var Player player with
        	this.ren = &renderer!;
    	end;
	
	par do
		every 800ms do
			spawn Cloud in cloudPool with
				var int w = 50 + _rand()%200;
				var int h = 20 + _rand()%50;
				var int y = h + _rand()%200;
				this.ren = &renderer!;
				this.r.x = 0;
				this.r.y = y;
				this.r.h = h;
				this.r.w = w;
				this.vx  = 10 + _rand()%100;
    			end;
		end
	with
		every SDL_DT do
			var int collided = 0;
			loop cloud in cloudPool do
				if(_SDL_HasIntersection(&&cloud:r, &&(player.r))) then
					collided = 1;
					break;
				end
			end
			if(collided) then emit e; end
		end	
	end

with
    every SDL_REDRAW do
        _SDL_RenderPresent(&&renderer!);
    end
end

var _SDL_Renderer& ren = &renderer!; 
native do
	SDL_Texture* over;
end
finalize
	_over = _IMG_LoadTexture(&&ren,"Over.png");
with
	_SDL_DestroyTexture(_over);
end

	_SDL_RenderCopy(&&ren, _over, null, null);
	_SDL_RenderPresent(&&renderer!);

await SDL_QUIT;

escape 0;

// e63b95a6905d278fb2ea187f8cad63ede552b4d6
